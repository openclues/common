
class DialogManager {
  static OverlayEntry? _overlayEntry;

  static void showDialogWithMessage(
    BuildContext context,
    String message,
    bool isSuccess,
  ) {
    closeDialog();

    _overlayEntry = OverlayEntry(
      builder: (context) {
        return WillPopScope(
          onWillPop: () async {
            return false; // Prevents going back when pressing the back button
          },
          child: GestureDetector(
            onTap: () {}, // Prevents dismiss on tap
            child: Stack(
              children: [
                BackdropFilter(
                  filter: ImageFilter.blur(
                      sigmaX: 10,
                      sigmaY: 10), // Adjust the blur values as needed
                  child: Container(
                    color: Colors.black
                        .withOpacity(0.5), // Adjust the opacity as needed
                    width: double.infinity,
                    height: double.infinity,
                    child: Center(
                      child: BounceInDown(
                        child: Container(
                          decoration: BoxDecoration(
                            boxShadow: const [
                              BoxShadow(
                                color: Colors.black12,
                                blurRadius: 3,
                                offset: Offset(1, 1),
                                spreadRadius: 5,
                              ),
                            ],
                            color: mainColor,
                            borderRadius: BorderRadius.circular(10),
                          ),
                          height: MediaQuery.of(context).size.height * 0.1,
                          width: MediaQuery.of(context).size.width * 0.8,
                          child: Center(
                            child: Padding(
                              padding: const EdgeInsets.all(8.0),
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  Expanded(
                                    child: Center(
                                      child: Text(
                                        message,
                                        style: Theme.of(context)
                                            .textTheme
                                            .bodyMedium!
                                            .copyWith(color: Colors.white),
                                        textAlign: TextAlign.center,
                                      ),
                                    ),
                                  ),
                                  // const SizedBox(height: 20),
                                  isSuccess
                                      ? const Icon(
                                          IconlyBroken.closeSquare,
                                          color: Colors.red,
                                        )
                                      : const CircularProgressIndicator(
                                          color: Colors.white,
                                        ),
                                ],
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ],
            ),
          ),
        );
      },
    );

    Overlay.of(context).insert(_overlayEntry!);

    if (isSuccess) {
      // do something after the success dialog is closed
    }
  }

  static void closeDialog() {
    _overlayEntry?.remove();
    _overlayEntry = null;
  }
}
